
设计模式是借助于OO手段（抽象、封装、继承、多态）和OO原则（封装变化、多用组合少用继承、针对接口编程不针对实现编程）来实现软件可复用、可扩展、可维护的目的。


开闭原则
策略模式、简单工厂模式、工厂方法模式、抽象工厂模式、建造模式、桥梁模式、门面模式、调停者模式、访问者模式、迭代子模式

里氏替换原则
策略模式、合成模式、代理模式

依赖倒置原则
工厂方法模式、模版方法模式、迭代子模式

接口隔离原则
备忘录模式、迭代子模式

最少知识法则
门面模式、调停者模式


解耦

所谓耦合，就是两个实体的行为的某种强关联。而将它们的强关联去掉，就是耦合的解脱，或称解耦。
在这里，解耦是指将抽象化和实现化之间的耦合解开，或者说是将它们之间的强关联改换成弱关联。
所谓强关联，就是在编译时期已经确定的，无法在运行时期动态改变的关联；所谓弱关联，就是可以动态的确定并且可以在运行时期动态地改变的关联。
在Java语言中，继承关系是强关联，而聚合关系是弱关联。将两个角色之间的继承关系改为聚合关系，就是将它们之间的强关联改换成弱关联。