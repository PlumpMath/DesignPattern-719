

模式化的过程是把问题抽象化，在忽略掉不重要的细节后，发现问题的一般性本质，并找到普遍适用的解决方案的过程。
人们在自己的环境中不断发现问题和寻找问题的解决方案的时候，发现有一些问题及其解决方案不断变换面孔重复出现，但是这些不同的面孔后面有着共同的性质，这些共同的本质就是模式。

模式的要素：

1.名字(Name)
一个模式必须有一个有意义的、简短而准确的名字。一个好的名字可以使对模式的抽象变得容易。有时一个模式同时有多于一个的名字，这时候这些名字就应当作为别名列出。

2.问题(Problem)
每一个模式必须有一个能够描述它的用意的问题，以便能够说明此模式在给定的环境和力中要达到的目标和结果。

3.环境或初始环境(Context或Initial Context)
模式的问题和模式的解答出现所需要的前提条件。环境说明模式的适用范围，环境也是模式应用之前的起始位形。

4.力(Forces)
力给出与模式有关的力和约束，它们怎样彼此相互作用，以及它们对实现目标所起的反作用，比如一个模式为所得到的好处付出的代价等。

5.解答(Solution)
解答不仅要给出静态的结构，而且要给出动态的行为。其中静态的结构描述此模式的形式和组织，而动态的行为使得模式变成“活”的。模式的解答所描述的正好可以作为实现模式的指南。

6.举例(Examples)
可以使用一个或多个示意性的应用来说明特定的真实环境，以及模式是怎样应用到环境上、改变环境并且给出当模式结束时的末态环境的。例子可以有助于读者理解模式的使用方法和适用性。

7.末态环境(Resulting Context)
模式应用到环境之后的状态或位形。末态环境包括模式带来的好的和坏的结果，以及新状态中含有的其他问题和可能设计的其他有关系的模式。

8.推理(Rationale)
推理解释本模式的步骤、规则，以及此模式作为一个整体是如何以特定的方式解决模式的力的，以及力和模式是如何协同合作的。
它可以告诉设计师模式是怎样工作的，为什么可以工作，以及为什么此模式是好的。
模式的解答可以描述模式外部的可见的结构和行为，而推理可以给出模式在系统表层下的深层结构和关键机制的洞察力。

9.其他相关模式(Related Patterns)
这一要素应当描述在现有的系统中这个模式与其他模式的静态的和动态的关系。

10.已知的应用(Known Uses)
在已有系统中模式出现和应用的例子，这有助于证明此模式是对一个重复发生的问题的可行的解答。