
设计模式是借助于OO手段（抽象、封装、继承、多态）和OO原则（封装变化、多用组合少用继承、针对接口编程不针对实现编程）来实现软件可复用、可扩展、可维护的目的。

开闭原则
4.4 策略模式
4.5 简单工厂模式、工厂方法模式、抽象工厂模式、建造模式、桥梁模式、门面模式、调停者模式、访问者模式、迭代子模式

里氏替换原则
7.3 策略模式、合成模式、代理模式

依赖倒置原则
8.4 工厂方法模式、模版方法模式、迭代子模式

接口隔离原则
9.3 备忘录模式、迭代子模式

迪米特法则
11.3 门面模式、调停者模式


简单工厂模式
12.5 单例模式、多例模式、备忘录模式、MVC模式

工厂方法模式
13.6 模版方法模式、MVC模式、享元模式、备忘录模式

抽象工厂模式
14.8 单例模式、原始模型模式、桥梁模式

建造模式
19.9 抽象工厂模式、策略模式、模版方法模式、缺省适配模式、合成模式

原型模式
20.9 合成模式、抽象工厂模式、工厂方法模式、门面模式、装饰模式

适配器模式
22.10 桥梁模式、装饰模式、缺省适配模式

合成模式
25.10 命令模式、装饰模式、迭代模式、责任链模式、享元模式

装饰模式
26.7 适配器模式、策略模式、合成模式
26.10 适配器模式和装饰模式

代理模式
28.9 适配器模式、装饰模式、门面模式

享元模式
31.10 单例模式、工厂方法模式、代理模式、不变模式、备忘录模式、状态模式、策略模式、合成模式

门面模式
无

桥梁模式
33.6 适配器模式、策略模式、装饰模式、状态模式、抽象工厂模式

不变模式
34.5 享元模式

策略模式
35.8 建造模式、适配器模式、享元模式、模版方法模式、MVC模式、装饰模式、开闭原则、里氏替换原则

观察者模式
38.7 备忘录模式、MVC模式

迭代子模式
43.6 合成模式、命令模式、备忘录模式、工厂方法模式

责任链模式
45.10 合成模式、命令模式、模板方法模式

命令模式
47.11 合成模式、备忘录模式、原始模型模式

备忘录模式
49.9 命令模式、原始模型模式、迭代子模式

状态模式
50.10 策略模式

访问者模式
53.9 迭代模式、合成模式

解释器模式
54.4 合成模式、不变模式和享元模式、迭代子模式、访问者模式、状态模式

调停者模式
55.7 门面模式、观察者模式、适配器模式