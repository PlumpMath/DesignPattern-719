/**
 * 
 */
package pattern.Decorator;

/**
 * 抽象构件角色
 * <p>
 * 给出一个抽象接口，以规范准备接收附加责任的对象。
 * <p>
 * 尽量保持抽象构件角色作为一个"轻"类：
 * 这个类的责任是为被装饰类和装饰类提供共同的接口
 * 因此它应当着重在提供接口而不是存储数据。
 * 本例这个角色由一个接口来扮演，它也可以是抽象类或者具体类
 * 那时就应当注意不要把太多的逻辑和状态放在Component类里了
 * 
 * @author 刘晨伟
 * 
 * 创建日期：2010-4-13
 */
public interface Component {

	/**
	 * 业务方法
	 */
	public void operation();
}
