动态迭代子则与静态迭代子完全相反，在迭代子被产生之后，迭代子保持着对聚集元素的引用，
因此，任何对原聚集内容的修改都会在迭代子对象上反映出来。
完整的动态迭代子不容易实现，但是简化的动态迭代子并不难实现。
大多数Java设计师遇到的迭代子都是这种简化的动态迭代子。

Fail Fast

如果当一个算法开始之后，它的运算环境发生变化，使得算法无法进行必需的调整时，
这个算法就应当立即发出故障信号，这就是Fail Fast的含义。
如果聚集对象的元素在一个动态迭代子的迭代过程中发生变化时，迭代过程会受到影响而变得不能自恰。
这时候，迭代子就应当立即抛出一个异常。这种迭代子就是实现了Fail Fast功能的迭代子。