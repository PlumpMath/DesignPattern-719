                              简单工厂(Simple Factory)模式

简单工厂模式是类的创建模式，又叫做静态工厂方法(Static Factory Method)模式。它是由一个工厂类根据传入的参量决定创建出哪一种产品类的实例。

它涉及到工厂角色、抽象产品角色以及具体产品角色这三个角色。

简单工厂模式的优点和缺点

优点

模式的核心是工厂类，这个类含有必要的判断逻辑，可以决定在什么时候创建哪一个产品类的实例。
而客户端则可以免除直接创建产品对象的责任，而仅仅负责消费产品，简单工厂模式通过这种做法实现了对责任的分割。

缺点

当产品类有不同的接口种类时，工厂类需要判断在什么时候创建某种产品。
这种对时机的判断和对哪一种具体产品的判断逻辑混合在一起，使得系统在将来进行功能扩展时较为困难，这一缺点在工厂方法模式中得到了克服。
由于简单工厂模式使用静态方法作为工厂方法，所以工厂角色无法形成基于继承的等级结构，这一缺点会在工厂方法模式中得到克服。


是否支持开闭原则？

一个系统总是可以划分成为产品的消费者角色(Client)、产品的工厂角色(Factory)以及产品角色(Product)三个子系统。

在这个系统中，功能的扩展体现在引进新的产品上。开闭原则要求系统允许当新的产品加入到系统中时，而无需对现有代码进行修改。
这一点对于产品的消费角色是成立的，而对于工厂角色是不成立的。
对于产品消费角色来说，任何时候需要某种产品，只需向工厂角色请求即可。而工厂角色在接到请求后，会自行判断创建和提供哪一个产品。
所以，产品消费角色无需知道它得到的是哪一个产品，也就是说产品消费角色无需修改就可以接纳新的产品。
对于工厂角色来说，增加新的产品是一个痛苦的过程。工厂角色必须知道每一种产品，如何创建它们，以及何时向客户端提供它们。
也就是说，接纳新的产品意味着修改这个工厂角色的源代码。

综上所述，简单工厂角色只在有限的程度上支持开闭原则。