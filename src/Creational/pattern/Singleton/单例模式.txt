                                                                                          单例(Singleton)模式

单例模式是对象的创建模式，它确保某一个类只有一个实例，而且自行实例化并向整个系统提供这个实例。这个类称为单例类。

单例模式有以下的特点：
1，单例类只能有一个实例
2，单例类必须自己创建自己的唯一的实例
3，单例类必须给所有其他对象提供这一实例
一些资源管理器常常设计成单例模式，比如线程池、缓存、注册表、日志等等。

虽然单例模式中的单例类被限定只能有一个实例，但是单例模式和单例类可以很容易被推广到任意且有有限多个实例的情况，这时候称它为多例模式和多例类。

使用单例模式有一个必要条件：
在一个系统要求一个类只有一个实例时才应当使用单例模式。
反过来说，如果一个类可以有几个实例共存，那么就没有必要使用单例类。

为什么选用单例模式，而不是把所有方法和变量都定义成静态的类。因为静态初始化的控制权在Java手中，这么做极有可能导致混乱。使用单例模式更安全也更灵活。


JDK里的应用：

java.lang.Runtime#getRuntime()
java.awt.Toolkit#getDefaultToolkit()
java.awt.GraphicsEnvironment#getLocalGraphicsEnvironment()
java.awt.Desktop#getDesktop()